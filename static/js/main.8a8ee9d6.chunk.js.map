{"version":3,"sources":["img/mercdev.svg","components/Button/Button.js","components/ErrorNotification/ErrorNotification.js","components/Login/Login.js","components/UserPage/UserPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","className","isNaN","this","props","type","value","onClick","onSubmit","PureComponent","ErrorNotification","textError","checkError","Login","state","valueEmail","valuePassword","handleChangeEmail","bind","handleChangePassword","handleClick","isValid","email","password","addErrorNotification","test","requestUser","self","myHeaders","Headers","append","fetch","method","headers","mode","cache","body","JSON","stringify","credentials","then","response","ok","json","data","giveUserData","showLogout","setState","event","target","isActive","formClassName","emailClassName","id","placeholder","pattern","onChange","required","autoFocus","UserPage","clearUserData","src","userAvatar","alt","userName","App","name","photoUrl","mercdev","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a8ee9d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mercdev.6e5e5d97.svg\";","import React, { PureComponent } from \"react\";\r\nimport \"./Button.css\";\r\n\r\nclass Button extends PureComponent {\r\n  render() {\r\n    let className = \"button\";\r\n    if (isNaN(this.props.className)) {\r\n      className += \" \" + this.props.className;\r\n    }\r\n    return (\r\n      <input\r\n        type=\"submit\"\r\n        className={className}\r\n        value={this.props.value}\r\n        onClick={this.props.onClick}\r\n        onSubmit={this.props.onClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./ErrorNotification.css\";\r\n\r\nclass ErrorNotification extends PureComponent {\r\n  render() {\r\n    let textError = this.props.textError;\r\n    if (!this.props.checkError) {\r\n      return null;\r\n    }\r\n    return <div className=\"form__error\">{textError}</div>;\r\n  }\r\n}\r\n\r\nexport default ErrorNotification;\r\n","import React, { PureComponent } from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport ErrorNotification from \"../ErrorNotification/ErrorNotification\";\r\nimport \"./Login.css\";\r\n\r\nclass Login extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      valueEmail: \"\",\r\n      valuePassword: \"\",\r\n      textError: \"\",\r\n      checkError: false\r\n    };\r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n    this.handleChangePassword = this.handleChangePassword.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.isValid();\r\n  }\r\n\r\n  isValid() {\r\n    let email = this.state.valueEmail,\r\n      password = this.state.valuePassword,\r\n      validation = /^[a-z0-9_-]+@[a-z0-9-]+\\.[a-z]{2,6}$/;\r\n    if (email === \"\" || password === \"\") {\r\n      this.addErrorNotification(\"E-Mail or password is not entered\");\r\n    } else if (!validation.test(email)) {\r\n      this.addErrorNotification(\"E-Mail doesn't match format\");\r\n    } else {\r\n      this.requestUser(email, password);\r\n    }\r\n  }\r\n\r\n  requestUser(email, password) {\r\n    const self = this;\r\n    let myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    fetch(\"https://us-central1-mercdev-academy.cloudfunctions.net/login\", {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      mode: \"cors\",\r\n      cache: \"force-cache\",\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        credentials: \"include\"\r\n      })\r\n    }).then(function(response) {\r\n      if (!response.ok) {\r\n        self.addErrorNotification(\"E-Mail or password is incorrect\");\r\n      } else {\r\n        response.json().then(function(data) {\r\n          self.props.giveUserData(data[\"name\"], data[\"photoUrl\"]);\r\n          self.showLogout();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  addErrorNotification(textError) {\r\n    this.setState({\r\n      textError: textError,\r\n      checkError: true,\r\n      valuePassword: \"\"\r\n    });\r\n  }\r\n\r\n  handleChangeEmail(event) {\r\n    this.setState({ valueEmail: event.target.value });\r\n  }\r\n\r\n  handleChangePassword(event) {\r\n    this.setState({ valuePassword: event.target.value });\r\n  }\r\n\r\n  showLogout() {\r\n    this.setState({\r\n      valueEmail: \"\",\r\n      valuePassword: \"\",\r\n      checkError: false,\r\n      textError: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isActive) {\r\n      return null;\r\n    }\r\n    let formClassName = \"form-login\",\r\n      formClassNameMod = \" form-login_error\",\r\n      emailClassName = \"form-login__input\",\r\n      emailClassNameMod = \" form-login__input_email-error\";\r\n    if (this.state.checkError) {\r\n      formClassName += formClassNameMod;\r\n      emailClassName += emailClassNameMod;\r\n    }\r\n    return (\r\n      <form className={formClassName} onSubmit={this.handleClick}>\r\n        <div className=\"form-login__form-name\">Log In</div>\r\n        <input\r\n          className={emailClassName}\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"E-Mail\"\r\n          pattern=\"([a-z0-9_-]+@[a-z0-9-]+\\\\.[a-z]{2,6})\"\r\n          onChange={this.handleChangeEmail}\r\n          value={this.state.valueEmail}\r\n          required\r\n          autoFocus\r\n        />\r\n        <input\r\n          className=\"form-login__input form-login__input_password\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={this.handleChangePassword}\r\n          value={this.state.valuePassword}\r\n        />\r\n        <ErrorNotification\r\n          checkError={this.state.checkError}\r\n          textError={this.state.textError}\r\n        />\r\n        <Button\r\n          onClick={this.handleClick}\r\n          value=\"Login\"\r\n          className=\"form-login__button\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { PureComponent } from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport \"./UserPage.css\";\r\n\r\nclass UserPage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.clearUserData();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isActive) {\r\n      return null;\r\n    }\r\n    return (\r\n      <form className=\"user-page\">\r\n        <img\r\n          className=\"user-page__user-avatar\"\r\n          src={this.props.userAvatar}\r\n          alt={this.props.userName}\r\n        />\r\n        <div className=\"user-page__username\">{this.props.userName}</div>\r\n        <Button\r\n          onClick={this.handleClick}\r\n          value=\"Logout\"\r\n          className=\"user-page__button\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPage;\r\n","import React, { PureComponent } from \"react\";\r\nimport mercdev from \"./img/mercdev.svg\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/Login/Login\";\r\nimport UserPage from \"./components/UserPage/UserPage\";\r\n\r\nclass App extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isActive: true,\r\n      userName: \"\",\r\n      userAvatar: \"\"\r\n    };\r\n    this.giveUserData = this.giveUserData.bind(this);\r\n    this.clearUserData = this.clearUserData.bind(this);\r\n  }\r\n\r\n  giveUserData(name, photoUrl) {\r\n    this.setState({\r\n      isActive: !this.state.isActive,\r\n      userName: name,\r\n      userAvatar: photoUrl\r\n    });\r\n  }\r\n\r\n  clearUserData() {\r\n    this.setState({\r\n      isActive: !this.state.isActive,\r\n      userName: \"\",\r\n      userAvatar: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <header className=\"header\">\r\n          <img className=\"logo-mercdev\" src={mercdev} alt=\"mercdev\" />\r\n        </header>\r\n        <main className=\"main\">\r\n          <Login\r\n            isActive={this.state.isActive}\r\n            giveUserData={this.giveUserData}\r\n          />\r\n          <UserPage\r\n            isActive={this.state.isActive}\r\n            userName={this.state.userName}\r\n            userAvatar={this.state.userAvatar}\r\n            clearUserData={this.clearUserData}\r\n          />\r\n        </main>\r\n        <footer className=\"footer\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}