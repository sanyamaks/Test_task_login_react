{"version":3,"sources":["img/mercdev.svg","components/buton.component/button.component.js","components/errorNotification.component/errorNotification.component.js","components/login.component/login.component.js","components/logout.component/logout.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","this","props","isActive","type","className","value","onClick","onSubmit","PureComponent","ErrorNotification","textError","checkError","Login","formClassName","emailClassName","formClassNameEmpty","emailClassNameEmpty","id","placeholder","pattern","onChange","onChangeEmail","valueEmail","required","autoFocus","onChangePassword","valuePassword","Logout","src","userAvatar","alt","userName","App","state","handleChangeEmail","bind","handleChangePassword","handleClick","isValid","showLogin","email","password","addErrorNotification","test","requestUser","self","myHeaders","Headers","append","fetch","method","headers","mode","cache","body","JSON","stringify","credentials","then","response","ok","json","data","showLogout","console","log","setState","name","photoUrl","event","target","mercdev","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.961b989f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mercdev.b139d867.svg\";","import React, { PureComponent } from \"react\";\r\nimport \"./button.style.css\"\r\n\r\nclass Button extends PureComponent {\r\n  render() {\r\n    if (this.props.isActive) {\r\n      return (\r\n        <input\r\n          type=\"submit\"\r\n          className=\"form__button form__button_login\"\r\n          value=\"Login\"\r\n          onClick={this.props.onClick}\r\n          onSubmit={this.props.onClick}\r\n        />\r\n      );\r\n    } else if (!this.props.isActive) {\r\n      return (\r\n        <input\r\n          type=\"button\"\r\n          className=\"form__button form__button_logout\"\r\n          value=\"Logout\"\r\n          onClick={this.props.onClick}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./errorNotification.style.css\";\r\n\r\nclass ErrorNotification extends PureComponent {\r\n  render() {\r\n    let textError = this.props.textError;\r\n    if (!this.props.checkError) {\r\n      return null;\r\n    }\r\n    return <div className=\"form__error\">{textError}</div>;\r\n  }\r\n}\r\n\r\nexport default ErrorNotification;\r\n","import React, { PureComponent } from \"react\";\r\nimport Button from \"./../buton.component/button.component\";\r\nimport ErrorNotification from \"./../errorNotification.component/errorNotification.component\";\r\nimport \"./login.style.css\"\r\n\r\nclass Login extends PureComponent {\r\n  render() {\r\n    if (!this.props.isActive) {\r\n      return null;\r\n    }\r\n    let formClassNameEmpty = \"form\",\r\n      formClassNameMod = \" form_error\",\r\n      formClassName = formClassNameEmpty,\r\n      emailClassNameEmpty = \"form__input\",\r\n      emailClassNameMod = \" form__input_email_error\",\r\n      emailClassName = emailClassNameEmpty;\r\n    if (this.props.checkError) {\r\n      formClassName = formClassNameEmpty + formClassNameMod;\r\n      emailClassName = emailClassNameEmpty + emailClassNameMod;\r\n    } else {\r\n      formClassName = formClassNameEmpty;\r\n      emailClassName = emailClassNameEmpty;\r\n    }\r\n    return (\r\n      <form className={formClassName} onSubmit={this.props.onClick}>\r\n        <div className=\"form__form-name\">Log In</div>\r\n        <input\r\n          className={emailClassName}\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"E-Mail\"\r\n          pattern=\"([a-z0-9_-]+@[a-z0-9-]+\\\\.[a-z]{2,6})\"\r\n          onChange={this.props.onChangeEmail}\r\n          value={this.props.valueEmail}\r\n          required\r\n          autoFocus\r\n        />\r\n        <input\r\n          className=\"form__input form__input_password\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={this.props.onChangePassword}\r\n          value={this.props.valuePassword}\r\n        />\r\n        <ErrorNotification\r\n          checkError={this.props.checkError}\r\n          textError={this.props.textError}\r\n        />\r\n        <Button isActive={this.props.isActive} onClick={this.props.onClick} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { PureComponent } from \"react\";\r\nimport Button from \"./../buton.component/button.component\";\r\nimport \"./logout.style.css\"\r\n\r\nclass Logout extends PureComponent {\r\n  render() {\r\n    if (this.props.isActive) {\r\n      return null;\r\n    }\r\n    return (\r\n      <form className=\"form form_logout\">\r\n        <img\r\n          className=\"form__user-avatar\"\r\n          src={this.props.userAvatar}\r\n          alt={this.props.userName}\r\n        />\r\n        <div className=\"form__username\">{this.props.userName}</div>\r\n        <Button isActive={this.props.isActive} onClick={this.props.onClick} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { PureComponent } from \"react\";\nimport mercdev from \"./img/mercdev.svg\";\nimport \"./App.css\";\nimport Login from \"./components/login.component/login.component\";\nimport Logout from \"./components/logout.component/logout.component\";\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: true,\n      valueEmail: \"\",\n      valuePassword: \"\",\n      userName: \"\",\n      userAvatar: \"\",\n      textError: \"\",\n      checkError: false\n    };\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (this.state.isActive) {\n      this.isValid();\n    } else if (!this.state.isActive) {\n      this.showLogin();\n    }\n  }\n\n  isValid() {\n    let email = this.state.valueEmail,\n      password = this.state.valuePassword,\n      validation = /^[a-z0-9_-]+@[a-z0-9-]+\\.[a-z]{2,6}$/;\n    if (email === \"\" || password === \"\") {\n      this.addErrorNotification(\"E-Mail or password is not entered\");\n    } else if (!validation.test(email)) {\n      this.addErrorNotification(\"E-Mail doesn't match format\");\n      // onChangeEmailInput(email);\n      // onChangePasswordInput(password);\n    } else {\n      this.requestUser(email, password);\n    }\n  }\n\n  requestUser(email, password) {\n    const self = this;\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    fetch(\"https://us-central1-mercdev-academy.cloudfunctions.net/login\", {\n      method: \"POST\",\n      headers: myHeaders,\n      mode: \"cors\",\n      cache: \"force-cache\",\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        credentials: \"include\"\n      })\n    }).then(function(response) {\n      if (!response.ok) {\n        console.log(\"Error\");\n        self.addErrorNotification(\"E-Mail or password is incorrect\");\n        // onChangeEmailInput(email);\n        // onChangePasswordInput(password);\n      } else {\n        response.json().then(function(data) {\n          self.showLogout(data[\"name\"], data[\"photoUrl\"]);\n        });\n      }\n    });\n  }\n\n  showLogin() {\n    this.setState({\n      isActive: !this.state.isActive,\n      userName: \"\",\n      userAvatar: \"\"\n    });\n  }\n\n  showLogout(name, photoUrl) {\n    this.setState({\n      isActive: !this.state.isActive,\n      userName: name,\n      userAvatar: photoUrl,\n      valueEmail: \"\",\n      valuePassword: \"\",\n      checkError: false,\n      textError: \"\"\n    });\n  }\n\n  addErrorNotification(textError) {\n    this.setState({\n      textError: textError,\n      checkError: true,\n      valuePassword: \"\"\n    });\n  }\n\n  handleChangeEmail(event) {\n    this.setState({ valueEmail: event.target.value });\n  }\n\n  handleChangePassword(event) {\n    this.setState({ valuePassword: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"header\">\n          <img className=\"logo-mercdev\" src={mercdev} alt=\"mercdev\" />\n        </div>\n        <div className=\"main\">\n          <Login\n            isActive={this.state.isActive}\n            onClick={this.handleClick}\n            valueEmail={this.state.valueEmail}\n            valuePassword={this.state.valuePassword}\n            onChangeEmail={this.handleChangeEmail}\n            onChangePassword={this.handleChangePassword}\n            textError={this.state.textError}\n            checkError={this.state.checkError}\n          />\n          <Logout\n            isActive={this.state.isActive}\n            onClick={this.handleClick}\n            userName={this.state.userName}\n            userAvatar={this.state.userAvatar}\n          />\n        </div>\n        <div className=\"footer\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}